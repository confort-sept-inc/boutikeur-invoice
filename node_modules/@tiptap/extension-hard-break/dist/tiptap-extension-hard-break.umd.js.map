{"version":3,"file":"tiptap-extension-hard-break.umd.js","sources":["../src/hard-break.ts"],"sourcesContent":["import { Node, mergeAttributes } from '@tiptap/core'\n\nexport interface HardBreakOptions {\n  keepMarks: boolean,\n  HTMLAttributes: Record<string, any>,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    hardBreak: {\n      /**\n       * Add a hard break\n       */\n      setHardBreak: () => ReturnType,\n    }\n  }\n}\n\nexport const HardBreak = Node.create<HardBreakOptions>({\n  name: 'hardBreak',\n\n  defaultOptions: {\n    keepMarks: true,\n    HTMLAttributes: {},\n  },\n\n  inline: true,\n\n  group: 'inline',\n\n  selectable: false,\n\n  parseHTML() {\n    return [\n      { tag: 'br' },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['br', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes)]\n  },\n\n  renderText() {\n    return '\\n'\n  },\n\n  addCommands() {\n    return {\n      setHardBreak: () => ({\n        commands,\n        chain,\n        state,\n        editor,\n      }) => {\n        return commands.first([\n          () => commands.exitCode(),\n          () => commands.command(() => {\n            const { keepMarks } = this.options\n            const { splittableMarks } = editor.extensionManager\n            const marks = state.storedMarks\n              || (state.selection.$to.parentOffset && state.selection.$from.marks())\n\n            return chain()\n              .insertContent({ type: this.name })\n              .command(({ tr, dispatch }) => {\n                if (dispatch && marks && keepMarks) {\n                  const filteredMarks = marks\n                    .filter(mark => splittableMarks.includes(mark.type.name))\n\n                  tr.ensureMarks(filteredMarks)\n                }\n\n                return true\n              })\n              .run()\n          }),\n        ])\n      },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-Enter': () => this.editor.commands.setHardBreak(),\n      'Shift-Enter': () => this.editor.commands.setHardBreak(),\n    }\n  },\n})\n"],"names":["Node","mergeAttributes"],"mappings":";;;;;;QAkBa,SAAS,GAAGA,SAAI,CAAC,MAAM,CAAmB;MACrD,IAAI,EAAE,WAAW;MAEjB,cAAc,EAAE;UACd,SAAS,EAAE,IAAI;UACf,cAAc,EAAE,EAAE;OACnB;MAED,MAAM,EAAE,IAAI;MAEZ,KAAK,EAAE,QAAQ;MAEf,UAAU,EAAE,KAAK;MAEjB,SAAS;UACP,OAAO;cACL,EAAE,GAAG,EAAE,IAAI,EAAE;WACd,CAAA;OACF;MAED,UAAU,CAAC,EAAE,cAAc,EAAE;UAC3B,OAAO,CAAC,IAAI,EAAEC,oBAAe,CAAC,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,cAAc,CAAC,CAAC,CAAA;OAC5E;MAED,UAAU;UACR,OAAO,IAAI,CAAA;OACZ;MAED,WAAW;UACT,OAAO;cACL,YAAY,EAAE,MAAM,CAAC,EACnB,QAAQ,EACR,KAAK,EACL,KAAK,EACL,MAAM,GACP;kBACC,OAAO,QAAQ,CAAC,KAAK,CAAC;sBACpB,MAAM,QAAQ,CAAC,QAAQ,EAAE;sBACzB,MAAM,QAAQ,CAAC,OAAO,CAAC;0BACrB,MAAM,EAAE,SAAS,EAAE,GAAG,IAAI,CAAC,OAAO,CAAA;0BAClC,MAAM,EAAE,eAAe,EAAE,GAAG,MAAM,CAAC,gBAAgB,CAAA;0BACnD,MAAM,KAAK,GAAG,KAAK,CAAC,WAAW;kCACzB,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,YAAY,IAAI,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAA;0BAExE,OAAO,KAAK,EAAE;+BACX,aAAa,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC;+BAClC,OAAO,CAAC,CAAC,EAAE,EAAE,EAAE,QAAQ,EAAE;8BACxB,IAAI,QAAQ,IAAI,KAAK,IAAI,SAAS,EAAE;kCAClC,MAAM,aAAa,GAAG,KAAK;uCACxB,MAAM,CAAC,IAAI,IAAI,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAA;kCAE3D,EAAE,CAAC,WAAW,CAAC,aAAa,CAAC,CAAA;+BAC9B;8BAED,OAAO,IAAI,CAAA;2BACZ,CAAC;+BACD,GAAG,EAAE,CAAA;uBACT,CAAC;mBACH,CAAC,CAAA;eACH;WACF,CAAA;OACF;MAED,oBAAoB;UAClB,OAAO;cACL,WAAW,EAAE,MAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,YAAY,EAAE;cACtD,aAAa,EAAE,MAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,YAAY,EAAE;WACzD,CAAA;OACF;GACF;;;;;;;;;;;"}